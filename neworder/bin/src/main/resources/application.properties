spring.application.name=neworder

# 포트번호
server.port=8080

# 컨텍스트 경로
server.servlet.context-path=/ROOT

# html의 위치
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# DB연동
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://175.126.37.21:13306/db230
spring.datasource.username=id230
spring.datasource.password=pw230

# MyBatis 설정
mybatis.mapper-locations=classpath:/mappers/*Mapper.xml
mybatis.type-aliases-package=com.example.entity # 이 줄 추가
mybatis.configuration.map-underscore-to-camel-case=true

# # 세션설정
# server.servlet.session.timeout=3600
# spring.session.store-type=jdbc
# spring.session.jdbc.initialize-schema=always

# 용량
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# create = > 기존 테이블 삭제후 다시 생성
# create-drop = > create와 같으나 종료시점에 테이블 삭제
# update => 변경부분만 반영
# validate = > 엔티티와 테이블 매핑 되었는지 확인.
# JPA 설정
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# 파일 저장 경로 설정
# upload.dir=src/main/resources/static/images
upload.dir=C:\\uploads\\images


# MQTT 브로커 연결 정보
spring.mqtt.url=tcp://localhost:1883  # 로컬 MQTT 브로커 URL
spring.mqtt.username=aaa
spring.mqtt.password=bbb
spring.mqtt.client-id=my-client-id
spring.mqtt.default-topic=bsit/class403/9
